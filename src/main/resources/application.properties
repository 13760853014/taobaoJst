server.port=8080
# 服务名称
spring.application.name=study-service
# mysql
# 数据源连接URL
#spring.datasource.url = jdbc:mysql://127.0.0.1:3306/test?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.url = jdbc:mysql://rdsr5204517q1h95o96wo.mysql.rds.aliyuncs.com:3306/vvic_test?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
##&tinyInt1isBit=false
# 数据库用户名
#spring.datasource.username=root
## 数据库用户密码
#spring.datasource.password=123456
## 数据源驱动
## spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# druid
# 配置初始化大小
spring.datasource.druid.initial-size=5
# 配置最大活跃链接
spring.datasource.druid.max-active=50
# 配置最小链接数量
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置PSCache
spring.datasource.druid.pool-prepared-statements=false
# 指定每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 校验SQL
spring.datasource.druid.validation-query=SELECT 1
# 校验SQL超时时间
spring.datasource.druid.validation-query-timeout=30000
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
spring.datasource.druid.test-while-idle=true
# 检测连接的间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=30000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
##默认开启
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.wall.enabled=true
##将执行效率是3s或者以上的SQL打印记录下来 ,默认3S,日志级别error级别
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=3000
## Druid中使用log4j2进行日志输出
spring.datasource.druid.filter.log4j2.enabled=true
spring.datasource.druid.filter.log4j2.statement-create-after-log-enabled=false
spring.datasource.druid.filter.log4j2.statement-close-after-log-enabled=false
spring.datasource.druid.filter.log4j2.result-set-close-after-log-enabled=false
## statement log 的总开关，前置条件：druid.sql.Statement 的日志级别为 debug, 生产环境去掉
spring.datasource.druid.filter.log4j2.result-set-open-after-log-enabled=true
spring.datasource.druid.filter.log4j2.statement-sql-pretty-format=true
spring.datasource.druid.filter.log4j2.statement-sql-format-option.desensitize=false
spring.datasource.druid.filter.log4j2.statement-sql-format-option.parameterized=true
# mybatis
# 设置日志输出属性，采用Log4j2
mybatis.configuration.log-impl=org.apache.ibatis.logging.log4j2.Log4j2Impl
# 使全局的映射器启用或禁用缓存
mybatis.configuration.cache-enabled=true
# 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。
mybatis.configuration.lazy-loading-enabled=true
# 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。
mybatis.configuration.aggressive-lazy-loading=true
# 是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true
mybatis.configuration.multiple-result-sets-enabled=true
# 是否可以使用列的别名 (取决于驱动的兼容性) default:true
mybatis.configuration.use-column-label=true
# 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。default:false
mybatis.configuration.use-generated-keys=true
# 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
mybatis.configuration.auto-mapping-behavior=PARTIAL
# 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）
mybatis.configuration.default-executor-type=SIMPLE
# 使用驼峰命名法转换字段。
mybatis.configuration.map-underscore-to-camel-case=true
# 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session
mybatis.configuration.local-cache-scope=SESSION
# 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型
mybatis.configuration.jdbc-type-for-null=NULL
# 设置字段值为空时，将以null值映射到map
mybatis.configuration.call-setters-on-nulls=true
# *Mapper.xml的位置
mybatis.mapper-locations=classpath:mapper/*.xml
# 别名包
mybatis.type-aliases-package=com.zjk.**.dao.entity
LOG_HOME=d:/logs/study-service
################ Redis 基础配置 ##############
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 链接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
################ Redis 线程池设置 ##############
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0


